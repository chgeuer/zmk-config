/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include "german-keymap.h"

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4

#define LEFT_ROW_0       1  2  3  4  5  6 
#define RIGT_ROW_0                         7  8  9 10 11 12
#define LEFT_ROW_1      13 14 15 16 17 18
#define RIGT_ROW_1                        19 20 21 22 23 24
#define LEFT_ROW_2      25 26 27 28 29 30
#define RIGT_ROW_2                        31 32 33 34 35 36
#define LEFT_ROW_3      37 38 39
#define RIGT_ROW_3                        40 41 42
#define LEFT_ROWS_012   LEFT_ROW_0 LEFT_ROW_1 LEFT_ROW_2
#define RIGT_ROWS_012   RIGT_ROW_0 RIGT_ROW_1 RIGT_ROW_2

/ {
        // https://zmk.dev/docs/behaviors/hold-tap
        behaviors {
                lh_pht: left_hand_positional_hold_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "balanced";
                        bindings = <&kp>, <&kp>;
                        #binding-cells = <2>;
                        hold-trigger-key-positions = <7 8 9 10 11 12       19 20 21 22 23 24       31 32 33 34 35 36>;
                };
                rh_pht: right_hand_positional_hold_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS2";
                        tapping-term-ms = <200>; 
                        quick-tap-ms = <0>;
                        flavor = "balanced";
                        bindings = <&kp>, <&kp>;
                        #binding-cells = <2>;
                        hold-trigger-key-positions = <1 2 3 4 5 6       13 14 15 16 17 18       25 26 27 28 29 30>;
                };
            };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC   &kp DE_Q           &kp DE_W          &kp DE_F             &kp DE_P             &kp DE_B             &kp DE_J      &kp DE_L              &kp DE_U               &kp DE_Y               &kp DE_SS           &kp DE_PLUS
   &kp TAB   &lh_pht LGUI DE_A  &lh_pht LALT DE_R &lh_pht LCTRL DE_S   &lh_pht LSHIFT DE_T  &kp DE_G             &kp DE_M      &rh_pht RSHIFT DE_N   &rh_pht RCTRL DE_E     &kp &rh_pht RALT DE_I  &rh_pht RGUI DE_O   &kp DE_HASH
   &none     &kp DE_Z           &kp DE_X          &kp DE_C             &kp DE_D             &kp DE_V             &kp DE_K      &kp DE_H              &kp DE_COMM            &kp DE_DOT             &kp DE_MINS         &none
                                                  &kp BSPC             &sk LSHIFT           &to 1                &sk RCTRL     &kp SPACE             &kp RET
                        >;      
                };

                layer_1 {
                        bindings = <
   &kp DE_CIRC &kp DE_EXLM  &kp DE_DQUO  &kp DE_DLR   &kp DE_AMPR  &kp DE_PERC    &none    &kp DE_LPRN   &kp DE_RPRN     &kp DE_MINS &kp DE_EQL   &kp DE_BSLS  
   &kp DE_PIPE &kp DE_AT    &kp DE_TILD  &kp DE_EURO  &none        &none          &none    &kp DE_LCBR   &kp DE_RCBR     &kp DE_LBRC &kp DE_RBRC  &kp DE_QUOT
   &none       &none        &none        &none        &none        &none          &none    &kp DE_LABK   &kp DE_RABK     &none       &none        &kp DE_GRV
                          	         &trans       &to 3        &to 2         &to 0    &trans        &trans
                        >;
                };

                layer_2 {
                        bindings = <
   &kp HOME    &kp N1   &kp N2  &kp N3   &kp N4      &kp N5                   &kp N6    &kp N7    &kp N8     &kp N9    &kp N0     &kp PG_UP
   &kp END     &kp F1   &kp F2  &kp F3   &kp F4      &kp F5                   &kp F6    &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &kp PG_DN
   &kp LSHIFT  &kp F7   &kp F8  &kp F9   &kp F10     &kp F11                  &kp F12   &kp PLUS  &kp LBRC   &kp RBRC  &kp PIPE   &none
                                &trans   &trans      &trans                   &to 0     &trans    &trans
                        >;
                };

                layer_3 {
                        bindings = <
   &out OUT_BLE     &bt BT0      &bt BT3       &none    &none    &none              &none   &kp C_VOLUME_UP    &kp C_PREVIOUS     &kp C_NEXT   &none      &none 
   &out OUT_USB     &bt BT1      &bt BT4       &none    &none    &none              &none   &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE   &none        &none      &none 
   &kp LEFT_SHIFT   &bt BT2      &bt BT_CLR    &none    &none    &none              &none   &kp DE_AE          &kp DE_OE          &kp DE_UE    &kp DE_SS  &none 
                                               &trans   &trans   &trans             &to 0  &trans             &trans
                        >;
                };
        };
};  



