/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include "german-keymap.h"

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4


/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                adj_layer {
                        if-layers =  <LOWER RAISE>;
                        then-layer = <ADJUST>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC   &kp DE_Q      &kp DE_W        &kp DE_F       &kp DE_P          &kp DE_B             &kp DE_J   &kp DE_L          &kp DE_U        &kp DE_Y        &kp DE_SS      &kp DE_PLUS
   &kp TAB   &mt LGUI DE_A &mt LALT DE_R   &mt LCTRL DE_S &mt LSHIFT DE_T   &kp DE_G             &kp DE_M   &mt RSHIFT DE_N   &mt RCTRL DE_E  &mt RALT DE_I   &mt RGUI DE_O  &kp DE_HASH
   &none     &kp DE_Z      &kp DE_X        &kp DE_C       &kp DE_D          &kp DE_V             &kp DE_K   &kp DE_H          &kp DE_COMM     &kp DE_DOT      &kp DE_MINS       &none
                                           &kp BSPC       &mo LOWER         &mo LOWER            &mo RAISE  &lt RAISE SPACE   &lt RAISE RET
                        >;
                };

                lower_layer {
                        bindings = <
   &kp DE_CIRC &kp DE_EXLM  &kp DE_DQUO  &kp DE_DLR   &kp DE_AMPR  &kp DE_PERC    &none    &kp DE_LPRN   &kp DE_RPRN     &kp DE_MINS &kp DE_EQL   &kp DE_BSLS  
   &kp DE_PIPE &kp DE_AT    &kp DE_TILD  &kp DE_EURO  &none        &none          &none    &kp DE_LCBR   &kp DE_RCBR     &kp DE_LBRC &kp DE_RBRC  &kp DE_QUOT
   &none       &none        &none        &none        &none        &none          &none    &kp DE_LABK   &kp DE_RABK     &none       &none        &kp DE_GRV
                          	         &trans       &trans       &trans         &trans   &trans        &trans
                        >;
                };


                raise_layer {
                        bindings = <
   &kp HOME   &kp N1   &kp N2  &kp N3   &kp N4      &kp N5                   &kp N6    &kp N7    &kp N8     &kp N9    &kp N0     &kp PG_UP
   &kp END    &kp F1   &kp F2  &kp F3   &kp F4      &kp F5                   &kp F6    &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &kp PG_DN
   &none      &kp F7   &kp F8  &kp F9   &kp F10     &kp F11                  &kp F12   &kp PLUS  &kp LBRC   &kp RBRC  &kp PIPE   &none
                               &trans   &trans      &trans                   &trans    &trans    &trans
                        >;
                };

                adjust_layer {
                        bindings = <
   &out OUT_BLE &bt BT0      &bt BT3          &none    &none    &none       &kp C_BRIGHTNESS_INC       &kp C_VOLUME_UP    &kp C_PREVIOUS     &kp C_NEXT     &none   &none 
   &out OUT_USB &bt BT1      &bt BT4          &none    &none    &none       &kp C_BRIGHTNESS_DEC       &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE   &none          &none   &none 
   &none        &bt BT2      &bt  BT_CLR      &none    &none    &none       &kp C_BRIGHTNESS_MAXIMUM   &none              &none              &none          &none   &none 
                                              &trans   &trans   &trans      &trans                     &trans             &trans
                        >;
                };
        };
};
